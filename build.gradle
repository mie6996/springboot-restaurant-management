plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id("org.sonarqube") version "4.4.1.3373"
}

group = 'com.restaurant'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // Use the latest version available
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // Use the same version as jjwt-api
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Use the same version as jjwt-api


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco


bootJar {
    enabled = true
}

jar {
    enabled = false
    manifest {
        attributes 'Main-Class': 'com.restaurant.RestaurantManagementApplication'
    }
}